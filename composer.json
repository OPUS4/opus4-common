{
  "name": "opus4-repo/opus4-common",
  "description": "OPUS 4 common library",
  "license": "GPL-2.0+",
  "type": "library",
  "keywords": [
    "opus4"
  ],
  "homepage": "http://www.opus-repository.org",
  "require": {
    "ext-dom": "*",
    "ext-mbstring": "*",
    "ext-fileinfo": "*",
    "opus4/zf1-future": "1.21.*",
    "symfony/console": "*",
    "symfony/mime": "*"
  },
  "require-dev": {
    "phpunit/phpunit": "<9",
    "opus4-repo/codesniffer": "dev-laminas",
    "squizlabs/php_codesniffer": "*",
    "phpmd/phpmd": "@stable",
    "phploc/phploc": "@stable",
    "sebastian/phpcpd": "*",
    "phpmetrics/phpmetrics": "*"
  },
  "minimum-stability": "dev",
  "prefer-stable": true,
  "autoload": {
    "psr-4": {
      "Opus\\Common\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "OpusTest\\Common\\": "test/"
    }
  },
  "scripts": {
    "check": [
      "Composer\\Config::disableProcessTimeout",
      "@prepare",
      "@test",
      "@cs-check"
    ],
    "check-full": [
      "Composer\\Config::disableProcessTimeout",
      "@prepare",
      "@cs-report",
      "@phpmd",
      "@phpcpd",
      "@test-coverage"
    ],
    "analyse": [
      "@prepare",
      "Composer\\Config::disableProcessTimeout",
      "@cs-report",
      "@phpmd"
    ],
    "test": [
      "@prepare",
      "phpunit --colors=always --log-junit build/phpunit.xml"
    ],
    "test-coverage": "phpunit --log-junit build/phpunit.xml --colors=always --coverage-html build/ --coverage-clover build/clover.xml",
    "prepare": "mkdir -p build/log",
    "cs-check": "phpcs -n",
    "cs-report": "phpcs -n --report=checkstyle --report-file=build/checkstyle.xml",
    "cs-fix": "phpcbf",
    "phpmd": "phpmd src xml cleancode,unusedcode,design,naming --reportfile build/phpmd.xml --ignore-violations-on-exit",
    "phpcpd": "phpcpd . --min-lines 3 --min-tokens 30 --log-pmd build/pmd-cpd.xml --progress || true",
    "phploc": "phploc --log-xml build/phploc.xml src",
    "metrics": "phpmetrics --report-html=build/metrics --junit=build/phpunit.xml ."
  },
  "config": {
    "allow-plugins": {
      "dealerdirect/phpcodesniffer-composer-installer": true
    }
  }
}
